{"version":3,"sources":["App.tsx","serviceWorker.ts","pages/CheckIn/CheckInPage.tsx","components/Navigation/Navigation.tsx","pages/cars/cars.tsx","pages/Races/RacesPage.tsx","pages/Lineup/LineupPage.tsx","pages/Leaderboard/LeaderboardPage.tsx","index.tsx"],"names":["App","useState","role","setRole","password","setPassword","redirect","setRedirect","to","push","className","type","name","value","onChange","event","target","onClick","axios","post","auth","username","then","response","localStorage","setItem","data","token","defaults","headers","common","getItem","user","console","log","catch","error","Boolean","window","location","hostname","match","TabState","withRouter","props","redirectToCheckin","setRedirectToCheckin","redirectToCars","setRedirectToCars","redirectToRaces","redirectToLineup","redirectToLeaderboard","redirectToLogin","setRedirectToLogin","icon","faFlagCheckered","pathname","Sort","CheckInPage","groupId","setGroupId","clubber","setClubber","meetsRequirments","setMeetsRequirements","club","setClub","FORM","tab","setTab","SUBMITTED","faCheck","onSubmit","preventDefault","meets_requirements","group_id","aria-label","required","disabled","Cars","cars","setCars","NONE","sort","setSort","isRaceGroupStared","setIsRaceGroupStared","useEffect","get","id","updateCars","map","car","fillNeeded","length","filler","Array","fill","join","substr","division","deleteCar","delete","GROUPID","faSort","CLUBBER","CLUB","DIVISION","i","key","car1","car2","Races","races","setRaces","RACE_NOT_STARTED","is_finished","RACE_STARTED","undefined","race","lanes_by_group_id","CHOOSE_GROUP_TO_START","Lineup","currentRace","setCurrentRace","nextRace","setNextRace","raceGroup","setRaceGroup","places","setPlaces","raceCount","setRaceCount","isSubmittedResultsValid","setIsSubmittedResultsValid","getCurrentRace","getNextRace","race_count","lane","lanes_by_clubber","Number","selected","includes","result","race_id","LeaderboardPage","outlaws","setOutlaws","regulars","setRegulars","regular","points","outlaw","baseURL","routing","basename","process","exact","path","component","RacesPage","LineupPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9c5d60b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Redirect } from 'react-router';\n\nconst App = () => {\n  const [role, setRole] = useState();\n  const [password, setPassword] = useState();\n  const [redirect, setRedirect] = useState(false);\n\n  const SignIn = (event: any) => {\n    axios.post('/sign-in', {}, {\n      auth: {\n        username: role,\n        password: password\n      }\n    })\n      .then(function (response) {\n        localStorage.setItem('authToken', response.data.token);\n        axios.defaults.headers.common = { 'Authorization': `Bearer ${localStorage.getItem('authToken')}` }\n        localStorage.setItem('role', response.data.user.role);\n        console.log(response.data.user.role);\n        setRedirect(true);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n    <>\n      { redirect && <Redirect to=\"/cars\" push /> }\n      {\n        !redirect && \n        <>\n          <div className={'signInContainer'}>\n            <h1>Sign in to Awana Grand Prix</h1>\n            <h3 className={'roleLoginInputLabel'}>Role</h3>\n            <div className={'roleRadioButtons'}>\n              <input type=\"radio\" name=\"role\" value=\"guest\" onChange={(event) => { setRole(event.target.value) }} /> <label>Guest</label>\n              <input type=\"radio\" name=\"role\" value=\"volunteer\" onChange={(event) => { setRole(event.target.value) }} /> <label>Volunteer</label>\n              <input type=\"radio\" name=\"role\" value=\"admin\" onChange={(event) => { setRole(event.target.value) }} /> <label>Admin</label><br />\n            </div>\n              \n            <label className={'roleLoginInputLabel'}>Password</label> <br />\n            <input className={'rolePasswordInput'}type=\"password\" onChange={(event) => { setPassword(event.target.value) }} /><br />\n\n            <button onClick={(event: any) => {\n              SignIn(event);\n            }}>Login</button>\n          </div>\n        </>\n      }\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport Navigation from '../../components/Navigation/Navigation'\nimport './CheckInPage.css'\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\n\naxios.defaults.headers.common = { 'Authorization': `Bearer ${localStorage.getItem('authToken')}` }\n\nenum TabState {\n    FORM,\n    SUBMITTED\n}\n\nconst CheckInPage = () => {\n  const [groupId, setGroupId] = useState();\n  const [clubber, setClubber] = useState();\n  const [meetsRequirments, setMeetsRequirements] = useState();\n  const [club, setClub] = useState();\n  const [tab, setTab] = useState(TabState.FORM);\n\n  const registerVehicle = (event: any) => {\n      event.preventDefault();\n    axios.post('/cars', {\n        clubber,\n        meets_requirements: meetsRequirments,\n        club\n    })\n      .then(response => {\n          setGroupId(response.data.group_id)\n          setTab(TabState.SUBMITTED)\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  switch(tab) {\n      case TabState.SUBMITTED:\n          return (\n              <>\n              <Navigation></Navigation>\n              <div className={'container'}>\n                <h2>you're entered <FontAwesomeIcon icon={faCheck} /></h2>\n                <div>{clubber} is <strong>#{groupId}</strong></div>\n                <button className={'enrollClubber'} onClick={() => {\n                    setTab(TabState.FORM);\n                }}>Enroll next clubber</button>\n              </div>\n              </>\n          )\n        default:\n            return (\n            <>\n                <Navigation></Navigation>\n                <form className={'container'} onSubmit={registerVehicle}>\n                    <h1>Welcome to the Awana Grand Prix</h1>\n                    <h2>Racer's Name</h2>\n                    <input type=\"text\" aria-label=\"Racer's Name\" onChange={(event) => setClubber(event.target.value)} required></input>\n                    <h2>group</h2>\n                    <div>\n                        <label>\n                            <input type=\"radio\" name=\"awana-group\" value=\"Sparks\" onChange={(event) => setClub(event.target.value)} required/>\n                            Sparks\n                        </label>\n                        <label>\n                            <input type=\"radio\" name=\"awana-group\" value=\"Ultimate Adventure\" onChange={(event) => setClub(event.target.value)}/>\n                            Ultimate Adventure\n                        </label>\n                        <label>\n                            <input type=\"radio\" name=\"awana-group\" value=\"Ultimate Challenge\" onChange={(event) => setClub(event.target.value)}/>\n                            Ultimate Challenge\n                        </label>\n                        <label>\n                            <input type=\"radio\" name=\"awana-group\" value=\"Other\" onChange={(event) => setClub(event.target.value)}/>\n                            Other\n                        </label>\n                    </div>\n                    <h2>division</h2>\n                    <div>\n                        {club !== 'Other' && \n                            <label>\n                                <input type=\"radio\" name=\"division\" value=\"Normal\" onChange={(event) => setMeetsRequirements(true)}/>\n                                Normal\n                            </label>\n                        }\n                        { club === 'Other' &&\n                            <label className=\"disabled\">\n                                <input type=\"radio\" name=\"division\" value=\"Normal\" onChange={(event) => setMeetsRequirements(true)} disabled/>\n                                Normal\n                            </label>\n                        }\n                        <label>\n                            <input type=\"radio\" name=\"division\" value=\"Outlaw\" onChange={(event) => setMeetsRequirements(false)} required/>\n                            Outlaw\n                        </label>\n                    </div>\n                    <button className={'enter'}>Enter</button>\n                </form>\n            </>\n            );\n\n  }\n  \n}\n\nexport default CheckInPage;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Navigation.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFlagCheckered } from '@fortawesome/free-solid-svg-icons'\nimport {withRouter} from 'react-router-dom';\n\nconst Navigation = (props: any) => {\n    const [redirectToCheckin, setRedirectToCheckin] = useState(false);\n    const [redirectToCars, setRedirectToCars] = useState(false);\n    const [redirectToRaces, setRedirectToRaces] = useState(false);\n    const [redirectToLineup, setRedirectToLineup] = useState(false);\n    const [redirectToLeaderboard, setRedirectToLeaderboard] = useState(false);\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\n\n    return (\n        <div>\n            <div className={'navContainer'}>\n                { redirectToCheckin && <Redirect to='/check-in' />}\n                { redirectToCars && <Redirect to='/cars' />}\n                { redirectToRaces && <Redirect to='/races' />}\n                { redirectToLineup && <Redirect to='/lineup' />}\n                { redirectToLeaderboard && <Redirect to='/leaderboard' />}\n                { redirectToLogin && <Redirect to='/' />}\n                <div className={'logo'} ><FontAwesomeIcon icon={faFlagCheckered} />&nbsp;&nbsp;&nbsp;AWANA Grand Prix</div>\n                <div className={'navLink' + (props.location.pathname === '/check-in' ? ' selectedLink' : '')} onClick={() => { setRedirectToCheckin(true) }}>Check In</div>\n                <div className={'navLink' + (props.location.pathname === '/cars' ? ' selectedLink' : '')} onClick={() => { setRedirectToCars(true) }}>Cars</div>\n                <div className={'loginLink'} onClick={() => { setRedirectToLogin(true) }}>{localStorage.getItem('role') ? localStorage.getItem('role') : 'login'}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Navigation);","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navigation from '../../components/Navigation/Navigation';\nimport './Cars.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\n\n// axios.defaults.headers.common = { 'Authorization': `Bearer ${localStorage.getItem('authToken')}` }\n\n\nenum Sort {\n  NONE,\n  GROUPID,\n  CLUBBER,\n  CLUB,\n  DIVISION\n}\n\n\nconst Cars = () => {\n  const [cars, setCars] = useState();\n  const [sort, setSort] = useState(Sort.NONE);\n  const [isRaceGroupStared, setIsRaceGroupStared] = useState(true);\n\n  useEffect(() => {\n    axios.get('/race-groups/current', {})\n    .then(function (response) {\n      if (response.data.id) {\n        setIsRaceGroupStared(true);\n      } else {\n        setIsRaceGroupStared(false);\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n    updateCars()\n  }, [])\n  \n\n  const updateCars = () => {\n    axios.get('/cars', {})\n      .then(function (response) {\n        setCars(response.data.map((car: any) => {\n          const fillNeeded = 3 - car.group_id.length;\n          const filler = Array(fillNeeded).fill('0').join('')\n          return {\n            id: car.id,\n            group_id: car.group_id.substr(0, 1) + filler + car.group_id.substr(1, car.group_id.length),\n            clubber: car.clubber,\n            club: car.club,\n            division: car.division\n          }\n        }))\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  const deleteCar = (id: number) => {\n    axios.delete(`/cars/${id}`)\n      .then(function (response) {\n        updateCars()\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n    <>\n      <Navigation></Navigation>\n\n      <table className={'carsTable'}>\n        <thead>\n          <tr>\n            <th onClick={() => {\n              setSort(Sort.GROUPID)\n              console.log(sort)\n            }}>ID <FontAwesomeIcon icon={faSort} /></th>\n            <th onClick={() => {\n              setSort(Sort.CLUBBER)\n            }}>CLUBBER <FontAwesomeIcon icon={faSort} /></th>\n            <th onClick={() => {\n              setSort(Sort.CLUB)\n            }}>CLUB <FontAwesomeIcon icon={faSort} /></th>\n            <th onClick={() => { setSort(Sort.DIVISION) }}>DIVISION <FontAwesomeIcon icon={faSort} /></th>\n            <th>DELETE</th>\n          </tr>\n        </thead>\n        <tbody>\n\n        {sort === Sort.NONE && cars && cars.map((car: any, i: number) => {\n              return (\n                <tr key={i}>\n                  <td>{car.group_id}</td>\n                  <td>{car.clubber}</td>\n                  <td>{car.club}</td>\n                  <td>{car.division}</td>\n                  <td>\n                      { !isRaceGroupStared &&\n                        <button onClick={() => {\n                        deleteCar(car.id);\n                        }}>Delete</button>\n                      }\n                      { isRaceGroupStared &&\n                        <button disabled>Delete</button>\n                      }\n                  </td>\n                </tr>\n              )\n            })}\n          {sort === Sort.GROUPID && cars && cars.sort((car1: any, car2: any) => {\n              return car1.group_id > car2.group_id ? 1 : -1;\n            }).map((car: any, i: number) => {\n              return (\n                <tr key={i}>\n                  <td>{car.group_id}</td>\n                  <td>{car.clubber}</td>\n                  <td>{car.club}</td>\n                  <td>{car.division}</td>\n                  <td>\n                      { !isRaceGroupStared &&\n                        <button onClick={() => {\n                        deleteCar(car.id);\n                        }}>Delete</button>\n                      }\n                      { isRaceGroupStared &&\n                        <button disabled>Delete</button>\n                      }\n                  </td>\n                </tr>\n              )\n            })}\n            {sort === Sort.CLUBBER && cars && cars.sort((car1: any, car2: any) => {\n              return car1.clubber > car2.clubber ? 1 : -1;\n            }).map((car: any, i: number) => {\n              return (\n                <tr key={i}>\n                  <td>{car.group_id}</td>\n                  <td>{car.clubber}</td>\n                  <td>{car.club}</td>\n                  <td>{car.division}</td>\n                  <td>\n                      { !isRaceGroupStared &&\n                        <button onClick={() => {\n                        deleteCar(car.id);\n                        }}>Delete</button>\n                      }\n                      { isRaceGroupStared &&\n                        <button disabled>Delete</button>\n                      }\n                  </td>\n                </tr>\n              )\n            })}\n            {sort === Sort.CLUB && cars && cars.sort((car1: any, car2: any) => {\n              return car1.club > car2.club ? 1 : -1;\n            }).map((car: any, i: number) => {\n              return (\n                <tr key={i}>\n                  <td>{car.group_id}</td>\n                  <td>{car.clubber}</td>\n                  <td>{car.club}</td>\n                  <td>{car.division}</td>\n                  <td>\n                      { !isRaceGroupStared &&\n                        <button onClick={() => {\n                        deleteCar(car.id);\n                        }}>Delete</button>\n                      }\n                      { isRaceGroupStared &&\n                        <button disabled>Delete</button>\n                      }\n                  </td>\n                </tr>\n              )\n            })}\n            {sort === Sort.DIVISION && cars && cars.sort((car1: any, car2: any) => {\n              return car1.division > car2.division ? 1 : -1;\n            }).map((car: any, i: number) => {\n              return (\n                <tr key={i}>\n                  <td>{car.group_id}</td>\n                  <td>{car.clubber}</td>\n                  <td>{car.club}</td>\n                  <td>{car.division}</td>\n                  <td>\n                      { !isRaceGroupStared &&\n                        <button onClick={() => {\n                        deleteCar(car.id);\n                        }}>Delete</button>\n                      }\n                      { isRaceGroupStared &&\n                        <button disabled>Delete</button>\n                      }\n                  </td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Cars;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navigation from '../../components/Navigation/Navigation';\nimport './RacesPage.css'\n\naxios.defaults.headers.common = { 'Authorization': `Bearer ${localStorage.getItem('authToken')}` }\n\nenum TabState {\n  RACE_STARTED,\n  RACE_NOT_STARTED,\n  CHOOSE_GROUP_TO_START\n}\n\nconst Races = () => {\n  const [races, setRaces] = useState();\n  const [isGroupStarted, setIsGroupStarted] = useState();\n  const [tab, setTab] = useState(TabState.RACE_NOT_STARTED);\n\n  useEffect(() => {\n    axios.get('/race-groups/current', {})\n      .then(function (response) {\n        if(response.data.name && !response.data.is_finished) {\n          setTab(TabState.RACE_STARTED)\n          axios.get(`/race-groups/${response.data.id}/races`)\n          .then(response => {\n            setRaces(response.data);\n          })\n        } \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [])\n\n  switch(tab) {\n    case TabState.RACE_STARTED:\n        return (\n          <>\n            <Navigation></Navigation>\n      \n            <table className={'racesTable'}>\n              <thead>\n                <tr>\n                  <th>Race #</th>\n                  <th>LANE 1</th>\n                  <th>LANE 2</th>\n                  <th>LANE 3</th>\n                  <th>LANE 4</th>\n                </tr>\n              </thead>\n              <tbody>\n      \n                {races != undefined && races.map((race: any, i: number) => {\n                  return (\n                    <tr key={i}>\n                      <td>{race.id}</td>\n                      <td>{race.lanes_by_group_id[0]}</td>\n                      <td>{race.lanes_by_group_id[1]}</td>\n                      <td>{race.lanes_by_group_id[2]}</td>\n                      <td>{race.lanes_by_group_id[3]}</td>\n                    </tr>\n                  )\n                })}\n                \n              </tbody>\n            </table>\n          </>\n        );\n    case TabState.CHOOSE_GROUP_TO_START:\n      return (\n        <>\n          <Navigation></Navigation>\n          <div className={'choose-group-container'}>\n            <h1>Which type?</h1>\n            <button onClick={() => {\n                axios.post('/race-groups/', { name: \"Regular\"})\n                .then(() => {\n                  setTab(TabState.RACE_STARTED)\n                })\n            }}>Regular</button>\n            <button onClick={() => {\n              axios.post('/race-groups/', { name: \"Outlaw\"})\n              .then(() => {\n                setTab(TabState.RACE_STARTED)\n              })\n            }}>Outlaw</button>\n          </div>\n        </>\n      );\n    default:\n        return (\n          <>\n            <Navigation></Navigation>\n            <div className={'start-race-container'}>\n              <div>No Races have been started.</div>\n              <button onClick={() => {\n                setTab(TabState.CHOOSE_GROUP_TO_START);\n              }}>Start Race</button>\n            </div>\n          </>\n        );\n  }\n  \n}\n\nexport default Races;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navigation from '../../components/Navigation/Navigation';\nimport './LineupPage.css'\n\naxios.defaults.headers.common = { 'Authorization': `Bearer ${localStorage.getItem('authToken')}` }\n\nconst Lineup = () => {\n  const [currentRace, setCurrentRace] = useState();\n  const [nextRace, setNextRace] = useState();\n  const [raceGroup, setRaceGroup] = useState();\n  const [places, setPlaces] = useState([0,0,0,0]);\n  const [raceCount, setRaceCount] = useState(0);\n  const [isSubmittedResultsValid, setIsSubmittedResultsValid] = useState(true)\n\n  useEffect(() => {\n    if (raceGroup) {\n      getCurrentRace();\n      getNextRace();\n    }\n  }, [raceGroup])\n\n  useEffect(() => {\n    axios.get('/race-groups/current', {})\n      .then(function (response) {\n        if (response.data.id) {\n          setRaceCount(response.data.race_count);\n          setRaceGroup(response.data.id);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [])\n\n  const submitRaceResults = () => {\n    if (places.includes(1) && places.includes(2) && places.includes(3) && places.includes(4)) {\n      axios.post(`/race-groups/${raceGroup}/races/${currentRace.id}/result`, {\n        result: {\n          race_id: currentRace.id,\n          places: places\n        }\n      }\n      )\n        .then(function (response) {\n          console.log(response);\n          setPlaces([0, 0, 0, 0])\n          getCurrentRace();\n          getNextRace();\n          setIsSubmittedResultsValid(true);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      setIsSubmittedResultsValid(false);\n    }\n  }\n\n  const getCurrentRace = () => {\n    axios.get(`/race-groups/${raceGroup}/races/current`, {})\n        .then((response) => {\n          setCurrentRace(response.data)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n  const getNextRace = () => {\n    axios.get(`/race-groups/${raceGroup}/races/next`, {})\n        .then(function (response) {\n          setNextRace(response.data)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n  return (\n    <div>\n      <Navigation></Navigation>\n      <div className={'nextRaceContainer'}>\n        <h3>Up Next</h3>\n        <table className={'nextRace'}>\n          <thead>\n            <tr>\n              <th>Group Id</th>\n              <th>Name</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {nextRace != undefined && nextRace.lanes_by_group_id.map((lane: number, i: number) => {\n              return (\n                <tr>\n                  <td>{lane}</td>\n                  <td>{nextRace.lanes_by_clubber[i]}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      <h3>Current Race ({ currentRace != undefined && raceCount != undefined && `${currentRace.id} / ${raceCount}`})</h3>\n      <table className={'currentRace'}>\n        <thead>\n          <tr>\n            <th>Group Id</th>\n            <th>Name</th>\n            <th>Place</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          {currentRace != undefined && currentRace.lanes_by_group_id.map((lane: number, i: number) => {\n            return (\n              <tr>\n                <td>{lane}</td>\n                <td>{currentRace.lanes_by_clubber[i]}</td>\n                <td>\n                  <select onChange={(event) => {\n                    places[i] = Number(event.target.value);\n                    console.log(places);\n                  }}>\n                    <option selected disabled>Choose here</option>\n                    <option value={1}>1st Place</option>\n                    <option value={2}>2nd Place</option>\n                    <option value={3}>3rd Place</option>\n                    <option value={4}>4th Place</option>\n                  </select>\n                </td>\n              </tr>\n            );\n          })\n            \n\n          }\n\n        </tbody>\n      </table>\n      { raceGroup && <button className={'submit-race-results-button'} onClick={submitRaceResults}>submit results</button>}\n      { !isSubmittedResultsValid && <div className={'submit-race-results-error-message'}>Must have all places (1st through 4th) filled out</div>}\n    </div>\n  );\n}\n\nexport default Lineup;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navigation from '../../components/Navigation/Navigation';\nimport './LeaderboardPage.css'\n\naxios.defaults.headers.common = { 'Authorization': `Bearer ${localStorage.getItem('authToken')}` }\n\nconst LeaderboardPage = () => {\n    const [outlaws, setOutlaws] = useState()\n    const [regulars, setRegulars] = useState()\n\n    useEffect(() => {\n        axios.get('/points-leaderboard')\n        .then(function (response) {\n          setOutlaws(response.data.outlaws)\n          setRegulars(response.data.regular)\n          console.log(response.data.regular)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }, [])\n\n    return (\n        <>\n            <Navigation></Navigation>\n            <div className={'leaderboardContainer'}>\n                <div className={'regularLeaderboardContainer'}>\n                    <h1>Regular</h1>\n                    <table className={'leaderboardTable'}>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>POINTS</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { regulars !== undefined && regulars.map((regular: any, i: number) => {\n                                return (\n                                    <tr key={'regular' + i}>\n                                        <td>{regular.group_id}</td>\n                                        <td>{regular.clubber}</td>\n                                        <td>{regular.points}</td>\n                                    </tr>\n                                )\n                            })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                <div className={'outlawLeaderboardContainer'}>\n                    <h1>Outlaw</h1>\n                    <table className={'leaderboardTable'}>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>POINTS</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { outlaws !== undefined && outlaws.map((outlaw: any, i: number) => {\n                                return (\n                                    <tr key={'outlaw' + i}>\n                                        <td>{outlaw.group_id}</td>\n                                        <td>{outlaw.clubber}</td>\n                                        <td>{outlaw.points}</td>\n                                    </tr>\n                                )\n                            })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default LeaderboardPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CheckInPage from './pages/CheckIn/CheckInPage';\nimport Cars from './pages/cars/cars';\nimport RacesPage from './pages/Races/RacesPage';\nimport LineupPage from './pages/Lineup/LineupPage';\nimport LeaderboardPage from './pages/Leaderboard/LeaderboardPage';\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'https://awana-grand-prix-api.herokuapp.com/';\naxios.defaults.headers.common = { 'Authorization': `Bearer ${localStorage.getItem('authToken')}` }\n\n\nconst routing = (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/check-in\" component={CheckInPage} />\n      <Route exact path=\"/cars\" component={Cars} />\n      <Route exact path=\"/races\" component={RacesPage} />\n      <Route exact path=\"/lineup\" component={LineupPage} />\n      <Route exact path=\"/leaderboard\" component={LeaderboardPage} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}