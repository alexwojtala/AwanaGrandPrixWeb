{"version":3,"sources":["App.tsx","serviceWorker.ts","pages/CheckIn/CheckInPage.tsx","components/CheckInConfirmation/CheckInConfirmation.tsx","components/Navigation/NavigationLink.tsx","components/Navigation/Navigation.tsx","components/Page/Page.tsx","pages/Cars/cars.tsx","pages/Races/RacesPage.tsx","components/Table/Table.tsx","services/RaceGroupService.ts","components/PlaceDropdown/PlaceDropdown.tsx","pages/Lineup/LineupPage.tsx","components/Leaderboard/Leaderboard.tsx","pages/Leaderboard/LeaderboardPage.tsx","index.tsx"],"names":["App","useState","role","setRole","password","setPassword","redirect","setRedirect","loading","setLoading","loginFailed","setLoginFailed","to","push","className","id","type","name","value","onChange","event","target","htmlFor","onClick","axios","post","auth","username","then","response","localStorage","setItem","data","token","defaults","headers","common","Authorization","getItem","user","catch","error","console","log","Boolean","window","location","hostname","match","TabState","CheckInConfirmation","clubber","groupId","onContinue","icon","faCheck","NavigationLink","path","text","currentPathname","withRouter","props","faFlagCheckered","href","pathname","Page","children","Sort","CheckInPage","setGroupId","setClubber","meetsRequirments","setMeetsRequirements","club","setClub","FORM","tab","setTab","SUBMITTED","onSubmit","preventDefault","meets_requirements","group_id","aria-label","required","disabled","Cars","cars","setCars","NONE","sort","setSort","isRaceGroupStared","setIsRaceGroupStared","SHOW_CARS","currentCarId","setCurrentCarId","currentClub","setCurrentClub","currentClubber","setCurrentClubber","currentGroupId","setCurrentGroupId","useEffect","get","updateCars","map","car","fillNeeded","length","filler","Array","fill","join","sort_group_id","substr","division","carRow","i","key","EDIT_CAR","delete","style","width","margin","put","GROUPID","faSort","CLUBBER","CLUB","DIVISION","car1","car2","Races","races","setRaces","RACE_NOT_STARTED","is_finished","RACE_STARTED","undefined","race","lanes_by_group_id","CHOOSE_GROUP_TO_START","Table","content","header","contentElements","contentElement","j","RaceGroupService","raceGroup","raceResult","race_id","result","PlaceDropdown","label","onChangeCallback","customStyles","control","provided","options","isSearchable","autosize","e","styles","Lineup","currentRace","setCurrentRace","nextRace","setNextRace","setRaceGroup","places","setPlaces","raceCount","setRaceCount","isSubmittedResultsValid","setIsSubmittedResultsValid","getCurrentRace","useCallback","getNextRace","getCurrentRaceGroup","race_count","lane","lanes_by_clubber","place","Number","includes","postRaceResults","reload","Leaderboard","title","leaders","leader","points","LeaderboardPage","outlaws","setOutlaws","regulars","setRegulars","regular","baseURL","routing","basename","process","exact","component","RacesPage","LineupPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d0d4309.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { Redirect } from \"react-router\";\n\nconst App = (): JSX.Element => {\n  const [role, setRole] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loginFailed, setLoginFailed] = useState(false);\n\n  const SignIn = () => {\n    axios\n      .post(\n        \"/sign-in\",\n        {},\n        {\n          auth: {\n            username: role,\n            password: password,\n          },\n        }\n      )\n      .then((response) => {\n        localStorage.setItem(\"authToken\", response.data.token);\n        axios.defaults.headers.common = {\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        };\n        localStorage.setItem(\"role\", response.data.user.role);\n        setRedirect(true);\n        setLoading(false);\n        setLoginFailed(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setLoginFailed(true);\n        console.log(error);\n      });\n    setLoading(true);\n  };\n\n  return (\n    <>\n      {redirect && <Redirect to=\"/cars\" push />}\n      {!redirect && (\n        <main>\n          <div className={\"signInContainer\"}>\n            <h1>Sign in to Awana Grand Prix</h1>\n            <h2 className={\"roleLoginInputLabel\"}>Role</h2>\n            <div className={\"roleRadioButtons\"}>\n              <input\n                id=\"role-guest\"\n                type=\"radio\"\n                name=\"role\"\n                value=\"guest\"\n                onChange={(event) => {\n                  setRole(event.target.value);\n                }}\n              />{\" \"}\n              <label htmlFor=\"role-guest\">Guest</label>\n              <input\n                id=\"role-volunteer\"\n                type=\"radio\"\n                name=\"role\"\n                value=\"volunteer\"\n                onChange={(event) => {\n                  setRole(event.target.value);\n                }}\n              />{\" \"}\n              <label htmlFor=\"role-volunteer\">Volunteer</label>\n              <input\n                id=\"role-admin\"\n                type=\"radio\"\n                name=\"role\"\n                value=\"admin\"\n                onChange={(event) => {\n                  setRole(event.target.value);\n                }}\n              />{\" \"}\n              <label htmlFor=\"role-admin\">Admin</label>\n              <br />\n            </div>\n            <label htmlFor=\"password\" className={\"roleLoginInputLabel\"}>\n              Password\n            </label>{\" \"}\n            <br />\n            <input\n              id=\"password\"\n              className={\"rolePasswordInput\"}\n              type=\"password\"\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n            />\n            <br />\n            {loading && (\n              <div className=\"loadingContainer\">\n                <div>Authenticating</div>\n                <div className=\"loader\" />\n              </div>\n            )}\n            {!loading && loginFailed && (\n              <div className=\"loginFailed\">\n                Login failed. Invalid credentials.\n              </div>\n            )}\n            <button\n              onClick={() => {\n                SignIn();\n              }}\n            >\n              Login\n            </button>\n          </div>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from \"react\";\nimport \"./CheckInPage.css\";\nimport axios from \"axios\";\nimport CheckInConfirmation from \"../../components/CheckInConfirmation/CheckInConfirmation\";\nimport Page from \"../../components/Page/Page\";\n\naxios.defaults.headers.common = {\n  Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n};\n\nenum TabState {\n  FORM,\n  SUBMITTED,\n}\n\nconst CheckInPage = (): JSX.Element => {\n  const [groupId, setGroupId] = useState<string>();\n  const [clubber, setClubber] = useState<string>();\n  const [meetsRequirments, setMeetsRequirements] = useState<boolean>();\n  const [club, setClub] = useState<string>();\n  const [tab, setTab] = useState<TabState>(TabState.FORM);\n\n  const registerVehicle = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    axios\n      .post(\"/cars\", {\n        clubber,\n        meets_requirements: meetsRequirments,\n        club,\n      })\n      .then((response) => {\n        setGroupId(response.data.group_id);\n        setTab(TabState.SUBMITTED);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  switch (tab) {\n    case TabState.SUBMITTED:\n      return (\n        <Page>\n          <CheckInConfirmation\n            clubber={clubber}\n            groupId={groupId}\n            onContinue={() => {\n              setTab(TabState.FORM);\n            }}\n          />\n        </Page>\n      );\n    default:\n      return (\n        <Page>\n          <form className={\"container\"} onSubmit={registerVehicle}>\n            <h1>Welcome to the Awana Grand Prix</h1>\n            <h2>Racer Name</h2>\n            <input\n              type=\"text\"\n              aria-label=\"Racer's Name\"\n              onChange={(event) => setClubber(event.target.value)}\n              required\n            ></input>\n            <h2>group</h2>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"awana-group\"\n                  value=\"Sparks\"\n                  onChange={(event) => setClub(event.target.value)}\n                  required\n                />\n                Sparks\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"awana-group\"\n                  value=\"Ultimate Adventure\"\n                  onChange={(event) => setClub(event.target.value)}\n                />\n                Ultimate Adventure\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"awana-group\"\n                  value=\"Ultimate Challenge\"\n                  onChange={(event) => setClub(event.target.value)}\n                />\n                Ultimate Challenge\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"awana-group\"\n                  value=\"Other\"\n                  onChange={(event) => setClub(event.target.value)}\n                />\n                Other\n              </label>\n            </div>\n            <h2>division</h2>\n            <div>\n              {club !== \"Other\" && (\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"division\"\n                    value=\"Normal\"\n                    onChange={() => setMeetsRequirements(true)}\n                  />\n                  Normal\n                </label>\n              )}\n              {club === \"Other\" && (\n                <label className=\"disabled\">\n                  <input\n                    type=\"radio\"\n                    name=\"division\"\n                    value=\"Normal\"\n                    onChange={() => setMeetsRequirements(true)}\n                    disabled\n                  />\n                  Normal\n                </label>\n              )}\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"division\"\n                  value=\"Outlaw\"\n                  onChange={() => setMeetsRequirements(false)}\n                  required\n                />\n                Outlaw\n              </label>\n            </div>\n            <button className={\"enter\"}>Enter</button>\n          </form>\n        </Page>\n      );\n  }\n};\n\nexport default CheckInPage;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface CheckInConfrimationProps {\n  clubber: string | undefined;\n  groupId: string | undefined;\n  onContinue: () => void;\n}\n\nconst CheckInConfirmation = ({\n  clubber,\n  groupId,\n  onContinue,\n}: CheckInConfrimationProps): JSX.Element => {\n  return (\n    <div className={\"container\"}>\n      <h2>\n        you are entered <FontAwesomeIcon icon={faCheck} />\n      </h2>\n      <div>\n        {clubber} is <strong>#{groupId}</strong>\n      </div>\n      <button className={\"enrollClubber\"} onClick={() => onContinue()}>\n        Enroll next clubber\n      </button>\n    </div>\n  );\n};\n\nexport default CheckInConfirmation;\n","import React from \"react\";\nimport \"./NavigationLink.css\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  path: string;\n  text: string;\n  currentPathname: string;\n}\n\nconst NavigationLink = ({\n  path,\n  text,\n  currentPathname,\n}: Props): JSX.Element => {\n  return (\n    <Link\n      className={`navLink` + (currentPathname === path ? \" selectedLink\" : \"\")}\n      to={path}\n    >\n      {text}\n    </Link>\n  );\n};\n\nexport default NavigationLink;\n","import React from \"react\";\nimport \"./Navigation.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFlagCheckered } from \"@fortawesome/free-solid-svg-icons\";\nimport { withRouter } from \"react-router-dom\";\nimport NavigationLink from \"./NavigationLink\";\n\ninterface Location {\n  pathname: string;\n}\n\ninterface Props {\n  location: Location;\n}\n\nconst Navigation = (props: Props) => {\n  return (\n    <nav>\n      <div className={\"navContainer\"}>\n        <div className={\"logo\"}>\n          <FontAwesomeIcon icon={faFlagCheckered} />\n          &nbsp;&nbsp;&nbsp;AWANA Grand Prix\n        </div>\n        <a className={\"loginLink\"} href=\"/\">\n          {localStorage.getItem(\"role\")\n            ? localStorage.getItem(\"role\")\n            : \"login\"}\n        </a>\n        <NavigationLink\n          path=\"/check-in\"\n          text=\"Check In\"\n          currentPathname={props.location.pathname}\n        />\n        <NavigationLink\n          path=\"/cars\"\n          text=\"Cars\"\n          currentPathname={props.location.pathname}\n        />\n        <NavigationLink\n          path=\"/races\"\n          text=\"Races\"\n          currentPathname={props.location.pathname}\n        />\n        <NavigationLink\n          path=\"/lineup\"\n          text=\"Lineup\"\n          currentPathname={props.location.pathname}\n        />\n        <NavigationLink\n          path=\"/leaderboard\"\n          text=\"Leaderboard\"\n          currentPathname={props.location.pathname}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default withRouter(Navigation);\n","import React from \"react\";\nimport Navigation from \"../../components/Navigation/Navigation\";\n\ninterface Props {\n  children: JSX.Element | (boolean | number | JSX.Element)[];\n}\n\nconst Page = ({ children }: Props): JSX.Element => {\n  return (\n    <>\n      <Navigation />\n      <main>{children}</main>\n    </>\n  );\n};\n\nexport default Page;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Cars.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport Page from \"../../components/Page/Page\";\n\nenum Sort {\n  NONE,\n  GROUPID,\n  CLUBBER,\n  CLUB,\n  DIVISION,\n}\n\nenum TabState {\n  EDIT_CAR,\n  SHOW_CARS,\n}\n\ninterface Car {\n  id: number;\n  group_id: string;\n  clubber: string;\n  club: string;\n  division: string;\n  meets_requirements: boolean;\n  sort_group_id: string;\n}\n\nconst Cars = (): JSX.Element => {\n  const [cars, setCars] = useState();\n  const [sort, setSort] = useState(Sort.NONE);\n  const [isRaceGroupStared, setIsRaceGroupStared] = useState(true);\n  const [tab, setTab] = useState(TabState.SHOW_CARS);\n\n  const [currentCarId, setCurrentCarId] = useState<number>();\n  const [currentClub, setCurrentClub] = useState<string>();\n  const [currentClubber, setCurrentClubber] = useState<string>();\n  const [currentGroupId, setCurrentGroupId] = useState<string>();\n\n  useEffect(() => {\n    axios\n      .get(\"/race-groups/current\", {})\n      .then((response) => {\n        if (response.data.id) {\n          setIsRaceGroupStared(true);\n        } else {\n          setIsRaceGroupStared(false);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    updateCars();\n  }, []);\n\n  const updateCars = () => {\n    axios\n      .get(\"/cars\", {})\n      .then((response) => {\n        setCars(\n          response.data.map((car: Car) => {\n            const fillNeeded = 3 - car.group_id.length;\n            const filler = Array(fillNeeded).fill(\"0\").join(\"\");\n            return {\n              id: car.id,\n              sort_group_id:\n                car.group_id.substr(0, 1) +\n                filler +\n                car.group_id.substr(1, car.group_id.length),\n              group_id: car.group_id,\n              clubber: car.clubber,\n              club: car.club,\n              division: car.division,\n              meets_requirements: car.meets_requirements,\n            };\n          })\n        );\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const deleteCar = (id: number) => {\n    axios\n      .delete(`/cars/${id}`)\n      .then(() => {\n        updateCars();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const editCar = () => {\n    axios\n      .put(`/cars/${currentCarId}`, {\n        club: currentClub,\n        clubber: currentClubber,\n        group_id: currentGroupId,\n      })\n      .then(() => {\n        updateCars();\n        setTab(TabState.SHOW_CARS);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const sortByGroupId = (car1: Car, car2: Car) => {\n    return car1.sort_group_id > car2.sort_group_id ? 1 : -1;\n  };\n\n  const sortByClubber = (car1: Car, car2: Car) => {\n    return car1.clubber > car2.clubber ? 1 : -1;\n  };\n\n  const sortByClub = (car1: Car, car2: Car) => {\n    return car1.club > car2.club ? 1 : -1;\n  };\n\n  const sortByDivision = (car1: Car, car2: Car) => {\n    return car1.division > car2.division ? 1 : -1;\n  };\n\n  const carRow = (car: Car, i: number) => {\n    return (\n      <tr key={i}>\n        <td>{car.group_id}</td>\n        <td>{car.clubber}</td>\n        <td>{car.club}</td>\n        <td>{car.division}</td>\n        <td>\n          {!isRaceGroupStared && (\n            <button\n              onClick={() => {\n                setCurrentCarId(car.id);\n                setCurrentClub(car.club);\n                setCurrentClubber(car.clubber);\n                setCurrentGroupId(car.group_id);\n\n                setTab(TabState.EDIT_CAR);\n              }}\n            >\n              Edit\n            </button>\n          )}\n          {isRaceGroupStared && <button disabled>Edit</button>}\n        </td>\n        <td>\n          {!isRaceGroupStared && (\n            <button\n              onClick={() => {\n                deleteCar(car.id);\n              }}\n            >\n              Delete\n            </button>\n          )}\n          {isRaceGroupStared && <button disabled>Delete</button>}\n        </td>\n      </tr>\n    );\n  };\n\n  switch (tab) {\n    case TabState.EDIT_CAR:\n      return (\n        <div style={{ width: \"600px\", margin: \"32px auto\" }}>\n          <label htmlFor=\"editGroupId\" className={\"editCarInputLabel\"}>\n            GROUP ID\n          </label>{\" \"}\n          <br />\n          <input\n            id=\"editGroupId\"\n            className={\"editCarInput\"}\n            type=\"text\"\n            onChange={(event) => {\n              setCurrentGroupId(event.target.value);\n            }}\n            value={currentGroupId}\n          />\n          <br />\n          <label htmlFor=\"editClubber\" className={\"editCarInputLabel\"}>\n            CLUBBER\n          </label>{\" \"}\n          <br />\n          <input\n            id=\"editClubber\"\n            className={\"editCarInput\"}\n            type=\"text\"\n            onChange={(event) => {\n              setCurrentClubber(event.target.value);\n            }}\n            value={currentClubber}\n          />\n          <br />\n          <label htmlFor=\"editClubber\" className={\"editCarInputLabel\"}>\n            CLUB\n          </label>{\" \"}\n          <br />\n          <input\n            id=\"editClub\"\n            className={\"editCarInput\"}\n            type=\"text\"\n            onChange={(event) => {\n              setCurrentClub(event.target.value);\n            }}\n            value={currentClub}\n          />\n          <br />\n          <button\n            className={\"editCarButton\"}\n            onClick={() => {\n              editCar();\n            }}\n          >\n            Update\n          </button>\n          <button\n            className={\"editCarCancel\"}\n            onClick={() => {\n              setTab(TabState.SHOW_CARS);\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      );\n    default:\n      return (\n        <Page>\n          <h1>Registered Racers</h1>\n          <table className={\"carsTable\"}>\n            <thead>\n              <tr>\n                <th\n                  onClick={() => {\n                    setSort(Sort.GROUPID);\n                  }}\n                >\n                  ID <FontAwesomeIcon icon={faSort} />\n                </th>\n                <th\n                  onClick={() => {\n                    setSort(Sort.CLUBBER);\n                  }}\n                >\n                  CLUBBER <FontAwesomeIcon icon={faSort} />\n                </th>\n                <th\n                  onClick={() => {\n                    setSort(Sort.CLUB);\n                  }}\n                >\n                  CLUB <FontAwesomeIcon icon={faSort} />\n                </th>\n                <th\n                  onClick={() => {\n                    setSort(Sort.DIVISION);\n                  }}\n                >\n                  DIVISION <FontAwesomeIcon icon={faSort} />\n                </th>\n                <th>EDIT</th>\n                <th>DELETE</th>\n              </tr>\n            </thead>\n            <tbody>\n              {sort === Sort.NONE && cars && cars.map(carRow)}\n\n              {sort === Sort.GROUPID &&\n                cars &&\n                cars.sort(sortByGroupId).map(carRow)}\n\n              {sort === Sort.CLUBBER &&\n                cars &&\n                cars.sort(sortByClubber).map(carRow)}\n\n              {sort === Sort.CLUB && cars && cars.sort(sortByClub).map(carRow)}\n\n              {sort === Sort.DIVISION &&\n                cars &&\n                cars.sort(sortByDivision).map(carRow)}\n            </tbody>\n          </table>\n        </Page>\n      );\n  }\n};\n\nexport default Cars;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./RacesPage.css\";\nimport Page from \"../../components/Page/Page\";\n\naxios.defaults.headers.common = {\n  Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n};\n\nenum TabState {\n  RACE_STARTED,\n  RACE_NOT_STARTED,\n  CHOOSE_GROUP_TO_START,\n}\n\ninterface Race {\n  id: number;\n  lanes_by_group_id: string[];\n}\n\nconst Races = (): JSX.Element => {\n  const [races, setRaces] = useState();\n  const [tab, setTab] = useState(TabState.RACE_NOT_STARTED);\n\n  useEffect(() => {\n    axios\n      .get(\"/race-groups/current\", {})\n      .then(function (response) {\n        if (response.data.name && !response.data.is_finished) {\n          setTab(TabState.RACE_STARTED);\n          axios\n            .get(`/race-groups/${response.data.id}/races`)\n            .then((response) => {\n              setRaces(response.data);\n            });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  switch (tab) {\n    case TabState.RACE_STARTED:\n      return (\n        <Page>\n          <h1>Race Order</h1>\n          <table className={\"racesTable\"}>\n            <thead>\n              <tr>\n                <th>Race #</th>\n                <th>LANE 1</th>\n                <th>LANE 2</th>\n                <th>LANE 3</th>\n                <th>LANE 4</th>\n              </tr>\n            </thead>\n            <tbody>\n              {races !== undefined &&\n                races.map((race: Race, i: number) => {\n                  return (\n                    <tr key={i}>\n                      <td>{race.id}</td>\n                      <td>{race.lanes_by_group_id[0]}</td>\n                      <td>{race.lanes_by_group_id[1]}</td>\n                      <td>{race.lanes_by_group_id[2]}</td>\n                      <td>{race.lanes_by_group_id[3]}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </Page>\n      );\n    case TabState.CHOOSE_GROUP_TO_START:\n      return (\n        <Page>\n          <div className={\"choose-group-container\"}>\n            <h1>Which type?</h1>\n            <button\n              onClick={() => {\n                axios.post(\"/race-groups/\", { name: \"Regular\" }).then(() => {\n                  setTab(TabState.RACE_STARTED);\n                });\n              }}\n            >\n              Regular\n            </button>\n            <button\n              onClick={() => {\n                axios.post(\"/race-groups/\", { name: \"Outlaw\" }).then(() => {\n                  setTab(TabState.RACE_STARTED);\n                });\n              }}\n            >\n              Outlaw\n            </button>\n          </div>\n        </Page>\n      );\n    default:\n      return (\n        <Page>\n          <div className={\"start-race-container\"}>\n            <h1>No Races have been started.</h1>\n            <button\n              onClick={() => {\n                setTab(TabState.CHOOSE_GROUP_TO_START);\n              }}\n            >\n              Start Race\n            </button>\n          </div>\n        </Page>\n      );\n  }\n};\n\nexport default Races;\n","import React from \"react\";\n\ninterface TableProps {\n  className: string;\n  headers: string[];\n  content: (string | JSX.Element)[][];\n}\n\nconst Table = ({ className, headers, content }: TableProps): JSX.Element => {\n  return (\n    <table className={className}>\n      <thead>\n        <tr>\n          {headers.map((header: string, i: number) => (\n            <th key={`header-${i}`}>{header}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {content.map((contentElements: (string | JSX.Element)[], i: number) => {\n          return (\n            <tr key={`contentElementRow-${i}`}>\n              {contentElements.map(\n                (contentElement: string | JSX.Element, j: number) => {\n                  return <td key={`contentElement-${j}`}>{contentElement}</td>;\n                }\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import axios, { AxiosResponse } from 'axios';\n\nexport interface Race {\n    id: number,\n    lanes: number[],\n    created_at: string,\n    updated_at: string,\n    race_group_id: number,\n    lanes_by_group_id: string[],\n    lanes_by_clubber: string[]\n}\n\nexport interface RaceGroup {\n    id: number,\n    name: string,\n    created_at: string,\n    updated_at: string,\n    is_finished: boolean,\n    race_count: number,\n}\n\nexport interface RaceResult {\n    race_id: number,\n    places: number[]\n}\n\nclass RaceGroupService {\n\n    static getCurrentRace(raceGroup: number): Promise<Race>  {\n         return axios.get(`/race-groups/${raceGroup}/races/current`, {})\n            .then((response) => {\n                return response.data;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    static getNextRace(raceGroup: number): Promise<Race>  {\n        return axios.get(`/race-groups/${raceGroup}/races/next`, {})\n           .then((response) => {\n               return response.data;\n           })\n           .catch(function (error) {\n               console.log(error);\n           });\n   }\n\n   static postRaceResults(raceGroup: number, raceResult: RaceResult): Promise<AxiosResponse> {\n        return axios.post(`/race-groups/${raceGroup}/races/${raceResult.race_id}/result`,\n            {\n                result: raceResult\n            }\n        )\n        .then((response) => {\n            return response.data;\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n   }\n\n   static getCurrentRaceGroup(): Promise<RaceGroup> {\n    return axios.get('/race-groups/current', {})\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n    \n}\n\nexport default RaceGroupService;","import React from \"react\";\nimport Select from \"react-select\";\n\ninterface Option {\n  label: string;\n  value: number;\n}\n\ninterface PlaceDropdownProps {\n  label: string;\n  onChangeCallback: (place: number) => void;\n}\n\nconst PlaceDropdown = ({\n  label,\n  onChangeCallback,\n}: PlaceDropdownProps): JSX.Element => {\n  const options = [\n    { value: 1, label: \"1st Place\" },\n    { value: 2, label: \"2nd Place\" },\n    { value: 3, label: \"3rd Place\" },\n    { value: 4, label: \"4th Place\" },\n  ];\n\n  const customStyles = {\n    // eslint-disable-next-line\n    control: (provided: any) => ({\n      ...provided,\n      width: 200,\n    }),\n  };\n\n  return (\n    <Select\n      aria-label={label}\n      options={options}\n      isSearchable={true}\n      autosize={true}\n      onChange={(e) => onChangeCallback((e as Option).value)}\n      styles={customStyles}\n    />\n  );\n};\n\nexport default PlaceDropdown;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport \"./LineupPage.css\";\nimport Table from \"../../components/Table/Table\";\nimport RaceGroupService, { Race } from \"../../services/RaceGroupService\";\nimport PlaceDropdown from \"../../components/PlaceDropdown/PlaceDropdown\";\nimport Page from \"../../components/Page/Page\";\n\naxios.defaults.headers.common = {\n  Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n};\n\nconst Lineup = (): JSX.Element => {\n  const [currentRace, setCurrentRace] = useState<Race>();\n  const [nextRace, setNextRace] = useState<Race>();\n  const [raceGroup, setRaceGroup] = useState<number>(-1);\n  const [places, setPlaces] = useState([0, 0, 0, 0]);\n  const [raceCount, setRaceCount] = useState(0);\n  const [isSubmittedResultsValid, setIsSubmittedResultsValid] = useState(true);\n\n  const getCurrentRace = useCallback(() => {\n    RaceGroupService.getCurrentRace(raceGroup).then(setCurrentRace);\n  }, [raceGroup]);\n\n  const getNextRace = useCallback(() => {\n    RaceGroupService.getNextRace(raceGroup).then(setNextRace);\n  }, [raceGroup]);\n\n  useEffect(() => {\n    if (raceGroup !== -1) {\n      getCurrentRace();\n      getNextRace();\n    }\n  }, [raceGroup, getCurrentRace, getNextRace]);\n\n  useEffect(() => {\n    RaceGroupService.getCurrentRaceGroup().then((raceGroup) => {\n      if (raceGroup.id) {\n        setRaceCount(raceGroup.race_count);\n        setRaceGroup(raceGroup.id);\n      }\n    });\n  }, []);\n\n  const submitRaceResults = () => {\n    if (\n      currentRace &&\n      places.includes(1) &&\n      places.includes(2) &&\n      places.includes(3) &&\n      places.includes(4)\n    ) {\n      const raceResult = { race_id: currentRace.id, places: places };\n\n      RaceGroupService.postRaceResults(raceGroup, raceResult).then(() => {\n        setPlaces([0, 0, 0, 0]);\n        getCurrentRace();\n        getNextRace();\n        setIsSubmittedResultsValid(true);\n        window.location.reload();\n      });\n    } else {\n      setIsSubmittedResultsValid(false);\n    }\n  };\n\n  return (\n    <Page>\n      <div className={\"nextRaceContainer\"}>\n        <h1>Race Lineup</h1>\n        <h2>Up Next</h2>\n        {nextRace !== undefined && (\n          <Table\n            className={\"nextRace\"}\n            headers={[\"Group Id\", \"Name\"]}\n            content={nextRace.lanes_by_group_id.map(\n              (lane: string, i: number) => [lane, nextRace.lanes_by_clubber[i]]\n            )}\n          />\n        )}\n      </div>\n\n      <h2>\n        Current Race (\n        {currentRace !== undefined &&\n          raceCount !== undefined &&\n          `${currentRace.id} / ${raceCount}`}\n        )\n      </h2>\n      {currentRace !== undefined && (\n        <Table\n          className={\"currentRace\"}\n          headers={[\"Group Id\", \"Name\", \"Place\"]}\n          content={currentRace.lanes_by_group_id.map(\n            (lane: string, i: number) => [\n              lane,\n              currentRace.lanes_by_clubber[i],\n              <PlaceDropdown\n                key={`lane${i}`}\n                label={`lane${i}Position`}\n                onChangeCallback={(place: number) => {\n                  places[i] = Number(place);\n                }}\n              />,\n            ]\n          )}\n        />\n      )}\n      {raceGroup && (\n        <button\n          className={\"submit-race-results-button\"}\n          onClick={submitRaceResults}\n        >\n          submit results\n        </button>\n      )}\n      {!isSubmittedResultsValid && (\n        <div className={\"submit-race-results-error-message\"}>\n          Must have all places (1st through 4th) filled out\n        </div>\n      )}\n    </Page>\n  );\n};\n\nexport default Lineup;\n","import React from \"react\";\n\nimport \"./Leaderboard.css\";\n\ninterface Leader {\n  group_id: string;\n  clubber: string;\n  points: number;\n}\n\ninterface LeaderboardProps {\n  title: string;\n  leaders: Leader[] | undefined;\n}\n\nconst Leaderboard = ({ title, leaders }: LeaderboardProps): JSX.Element => {\n  return (\n    <div className={\"leaderboardContainer\"}>\n      <h1>{title}</h1>\n      <table className={\"leaderboardTable\"}>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>NAME</th>\n            <th>POINTS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leaders !== undefined &&\n            leaders.map((leader: Leader, i: number) => {\n              return (\n                <tr key={\"regular\" + i}>\n                  <td>{leader.group_id}</td>\n                  <td>{leader.clubber}</td>\n                  <td>{leader.points}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./LeaderboardPage.css\";\nimport Leaderboard from \"../../components/Leaderboard/Leaderboard\";\nimport Page from \"../../components/Page/Page\";\n\naxios.defaults.headers.common = {\n  Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n};\n\nconst LeaderboardPage = (): JSX.Element => {\n  const [outlaws, setOutlaws] = useState();\n  const [regulars, setRegulars] = useState();\n\n  useEffect(() => {\n    axios\n      .get(\"/points-leaderboard\")\n      .then(function (response) {\n        setOutlaws(response.data.outlaws);\n        setRegulars(response.data.regular);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Page>\n      <div className={\"leaderboardsContainer\"}>\n        <Leaderboard title={\"Regular\"} leaders={regulars} />\n        <Leaderboard title={\"Outlaw\"} leaders={outlaws} />\n      </div>\n    </Page>\n  );\n};\n\nexport default LeaderboardPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CheckInPage from \"./pages/CheckIn/CheckInPage\";\nimport Cars from \"./pages/Cars/cars\";\nimport RacesPage from \"./pages/Races/RacesPage\";\nimport LineupPage from \"./pages/Lineup/LineupPage\";\nimport LeaderboardPage from \"./pages/Leaderboard/LeaderboardPage\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://awana-grand-prix-api.herokuapp.com/\";\naxios.defaults.headers.common = {\n  Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n};\n\nconst routing = (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/check-in\" component={CheckInPage} />\n      <Route exact path=\"/cars\" component={Cars} />\n      <Route exact path=\"/races\" component={RacesPage} />\n      <Route exact path=\"/lineup\" component={LineupPage} />\n      <Route exact path=\"/leaderboard\" component={LeaderboardPage} />\n    </div>\n  </Router>\n);\n\nif (process.env.NODE_ENV !== \"production\") {\n  import(\"react-axe\").then((axe) => {\n    axe.default(React, ReactDOM, 1000);\n    ReactDOM.render(routing, document.getElementById(\"root\"));\n  });\n} else {\n  ReactDOM.render(routing, document.getElementById(\"root\"));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}